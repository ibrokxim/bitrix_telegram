<?php

namespace App\Http\Controllers;

use App\Models\Order;
use App\Services\TelegramService;
use App\Services\Bitrix24\DealService;
use App\Services\Bitrix24\ProductService;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;

class Bitrix24EventController extends Controller
{
    protected $webhookToken;
    protected $dealService;
    protected $productService;
    protected $telegramService;

    public function __construct(
        DealService $dealService,
        ProductService $productService,
        TelegramService $telegramService
    ) {
        $this->webhookToken = "a2m41hryq1h0h4239z8j2m6qbetoz62a";
        $this->dealService = $dealService;
        $this->productService = $productService;
        $this->telegramService = $telegramService;
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è –æ—Ç Bitrix24 —á–µ—Ä–µ–∑ –∏—Å—Ö–æ–¥—è—â–∏–π –≤–µ–±—Ö—É–∫
     */
    public function handleEvent(Request $request)
    {
        // –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        Log::info('–í—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å –æ—Ç Bitrix24:', [
            'method' => $request->method(),
            'url' => $request->fullUrl(),
            'headers' => $request->headers->all(),
            'body' => $request->all(),
            'ip' => $request->ip()
        ]);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        $token = $request->header('X-Bitrix-Webhook-Token')
            ?? $request->input('token')
            ?? $request->input('auth.application_token');

        Log::info('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞:', [
            'received_token' => $token,
            'expected_token' => $this->webhookToken
        ]);

        if ($token !== $this->webhookToken) {
            Log::warning('–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏', [
                'ip' => $request->ip(),
                'token' => $token
            ]);
            return response()->json(['error' => 'Unauthorized'], 401);
        }

        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏
            if ($request->input('event') === 'ONCRMDEALUPDATE') {
                $fields = $request->input('data.FIELDS', []);

                Log::info('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ —Å–¥–µ–ª–∫–µ:', [
                    'event' => $request->input('event'),
                    'fields' => $fields
                ]);

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–¥–µ–ª–∫–∏
                if (isset($fields['STAGE_ID'])) {
                    $dealId = $fields['ID'] ?? null;
                    $newStageId = $fields['STAGE_ID'];

                    Log::info('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–¥–µ–ª–∫–∏:', [
                        'deal_id' => $dealId,
                        'new_stage' => $newStageId
                    ]);

                    // –ù–∞—Ö–æ–¥–∏–º –∑–∞–∫–∞–∑ –ø–æ ID —Å–¥–µ–ª–∫–∏ –≤ Bitrix24
                    $order = Order::where('bitrix_deal_id', $dealId)->first();

                    Log::info('–ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–∞:', [
                        'deal_id' => $dealId,
                        'order_found' => !is_null($order),
                        'order_details' => $order ? [
                            'id' => $order->id,
                            'current_status' => $order->status,
                            'user_id' => $order->user_id
                        ] : null
                    ]);

                    if ($order) {
                        // –ú–∞–ø–ø–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–æ–≤ –∏–∑ Bitrix24 –≤ —Å—Ç–∞—Ç—É—Å—ã –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã
                        $statusMapping = [
                            'C1:NEW' => 'new',                    // –ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞
                            'C1:PREPARATION' => 'processed',       // –í —Ä–∞–±–æ—Ç–µ
                            'C1:PREPAYMENT_INVOICE' => 'confirmed', // –°—á–µ—Ç –Ω–∞ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É
                            'C1:EXECUTING' => 'shipped',           // –í –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–æ—Å—Ç–∞–≤–∫–∏
                            'C1:FINAL_INVOICE' => 'delivered',     // –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ
                            'C1:WON' => 'completed',              // –°–¥–µ–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
                            'C1:LOSE' => 'canceled'               // –°–¥–µ–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞
                        ];

                        Log::info('–ú–∞–ø–ø–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞:', [
                            'bitrix_status' => $newStageId,
                            'mapped_status' => $statusMapping[$newStageId] ?? 'unknown'
                        ]);

                        $newStatus = $statusMapping[$newStageId] ?? 'unknown';
                        $oldStatus = $order->status;

                        if ($newStatus !== $oldStatus) {
                            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
                            $order->status = $newStatus;
                            $order->save();

                            Log::info('–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω:', [
                                'order_id' => $order->id,
                                'old_status' => $oldStatus,
                                'new_status' => $newStatus
                            ]);

                            // –ü–æ–ª—É—á–∞–µ–º —Ä—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                            $statusNames = [
                                'new' => '–ù–æ–≤—ã–π',
                                'processed' => '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
                                'confirmed' => '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
                                'shipped' => '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω',
                                'delivered' => '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
                                'completed' => '–ó–∞–≤–µ—Ä—à–µ–Ω',
                                'canceled' => '–û—Ç–º–µ–Ω–µ–Ω'
                            ];

                            $statusText = $statusNames[$newStatus] ?? $newStatus;

                            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                            $message = "üì¶ *–ó–∞–∫–∞–∑ #{$order->id}* | *Buyurtma #{$order->id}*\n\n";

                            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö
                            $message .= "*–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:*\n";
                            $message .= "*Buyurtma tarkibi:*\n";
                            foreach ($order->items as $item) {
                                $message .= "‚Ä¢ {$item->product->name} x {$item->quantity} —à—Ç. = {$item->price} —Å—É–º\n";
                            }
                            $message .= "\n";

                            // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å–¥–µ–ª–∫–∏ –∏–∑ –ë–∏—Ç—Ä–∏–∫—Å24
                            $dealProducts = $this->productService->getDealProducts($dealId);
                            if ($dealProducts) {
                                $message .= "*–¢–æ–≤–∞—Ä—ã –≤ –ë–∏—Ç—Ä–∏–∫—Å24:*\n";
                                $message .= "*Bitrix24 dagi tovarlar:*\n";
                                foreach ($dealProducts as $product) {
                                    $message .= "‚Ä¢ {$product['PRODUCT_NAME']} x {$product['QUANTITY']} —à—Ç. = {$product['PRICE']} —Å—É–º\n";
                                }
                                $message .= "\n";
                            }

                            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
                            switch ($newStatus) {
                                case 'new':
                                    $message .= "üÜï *–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: –ù–æ–≤—ã–π*\n";
                                    $message .= "–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É. –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä.\n\n";
                                    $message .= "üÜï *Buyurtma holati: Yangi*\n";
                                    $message .= "Buyurtmangiz muvaffaqiyatli yaratildi va qayta ishlashga qabul qilindi. Tez orada menejerimiz siz bilan bog'lanadi.";
                                    break;
                                case 'processed':
                                    $message .= "‚ö°Ô∏è *–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: –í –æ–±—Ä–∞–±–æ—Ç–∫–µ*\n";
                                    $message .= "–ú—ã –Ω–∞—á–∞–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–∞—à –∑–∞–∫–∞–∑. –ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç –Ω–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –≥–æ—Ç–æ–≤—è—Ç –∏—Ö –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ.\n\n";
                                    $message .= "‚ö°Ô∏è *Buyurtma holati: Qayta ishlashda*\n";
                                    $message .= "Buyurtmangizni qayta ishlashni boshladik. Mutaxassislarimiz tovarlar mavjudligini tekshirib, jo'natishga tayyorlamoqdalar.";
                                    break;
                                case 'confirmed':
                                    $message .= "‚úÖ *–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω*\n";
                                    $message .= "–í–∞—à –∑–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω! –ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏ –≥–æ—Ç–æ–≤–∏–º –∏—Ö –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ. –û–∂–∏–¥–∞–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç–∞–≤–∫–µ.\n\n";
                                    $message .= "‚úÖ *Buyurtma holati: Tasdiqlandi*\n";
                                    $message .= "Buyurtmangiz tasdiqlandi! Barcha tovarlarni tayyorladik va jo'natishga tayyorlamoqdamiz. Yetkazib berish haqida ma'lumot kuting.";
                                    break;
                                case 'shipped':
                                    $message .= "üöö *–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: –û—Ç–ø—Ä–∞–≤–ª–µ–Ω*\n";
                                    $message .= "–û—Ç–ª–∏—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏! –í–∞—à –∑–∞–∫–∞–∑ —É–∂–µ –≤ –ø—É—Ç–∏. –ö—É—Ä—å–µ—Ä –¥–æ—Å—Ç–∞–≤–∏—Ç –µ–≥–æ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n";
                                    $message .= "üöö *Buyurtma holati: Jo'natildi*\n";
                                    $message .= "Ajoyib yangilik! Buyurtmangiz yo'lda. Kuryer uni ko'rsatilgan manzilga yaqin vaqt ichida yetkazib beradi.";
                                    break;
                                case 'delivered':
                                    $message .= "üì¨ *–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: –î–æ—Å—Ç–∞–≤–ª–µ–Ω*\n";
                                    $message .= "–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É. –ù–∞–¥–µ–µ–º—Å—è, –≤–∞–º –ø–æ–Ω—Ä–∞–≤—è—Ç—Å—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã.\n\n";
                                    $message .= "üì¨ *Buyurtma holati: Yetkazildi*\n";
                                    $message .= "Buyurtmangiz muvaffaqiyatli yetkazib berildi! Xarid uchun rahmat. Sotib olingan tovarlar sizga yoqadi degan umiddamiz.";
                                    break;
                                case 'completed':
                                    $message .= "üéâ *–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: –ó–∞–≤–µ—Ä—à–µ–Ω*\n";
                                    $message .= "–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω! –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –≤—ã–±–æ—Ä –Ω–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞. –ë—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞!\n\n";
                                    $message .= "üéâ *Buyurtma holati: Yakunlandi*\n";
                                    $message .= "Buyurtma muvaffaqiyatli yakunlandi! Do'konimizni tanlaganingiz uchun tashakkur. Sizni yana ko'rishdan xursand bo'lamiz!";
                                    break;
                                case 'canceled':
                                    $message .= "‚ùå *–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: –û—Ç–º–µ–Ω–µ–Ω*\n";
                                    $message .= "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω. –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n\n";
                                    $message .= "‚ùå *Buyurtma holati: Bekor qilindi*\n";
                                    $message .= "Afsuski, buyurtmangiz bekor qilindi. Savollaringiz bo'lsa, iltimos, bizning qo'llab-quvvatlash xizmatimiz bilan bog'laning.";
                                    break;
                            }

                            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram
                            if ($order->user && $order->user->telegram_chat_id) {
                                Log::info('–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram:', [
                                    'chat_id' => $order->user->telegram_chat_id,
                                    'message' => $message
                                ]);

                                $this->telegramService->sendMessage(
                                    $order->user->telegram_chat_id,
                                    $message,
                                    ['parse_mode' => 'Markdown']
                                );
                            } else {
                                Log::warning('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç telegram_chat_id', [
                                    'order_id' => $order->id,
                                    'user_id' => $order->user_id ?? null
                                ]);
                            }
                        } else {
                            Log::info('–°—Ç–∞—Ç—É—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è:', [
                                'order_id' => $order->id,
                                'status' => $oldStatus
                            ]);
                        }
                    } else {
                        Log::warning('–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Å–¥–µ–ª–∫–∏ Bitrix24', [
                            'deal_id' => $dealId
                        ]);
                    }
                } else {
                    Log::info('–°–æ–±—ã—Ç–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞');
                }
            } else {
                Log::info('–ü–æ–ª—É—á–µ–Ω–æ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–µ —Å–æ–±—ã—Ç–∏–µ:', [
                    'event' => $request->input('event')
                ]);
            }

            return response()->json([
                'status' => 'success',
                'message' => '–°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ'
            ]);

        } catch (\Exception $e) {
            Log::error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook –æ—Ç Bitrix24: ' . $e->getMessage(), [
                'exception' => $e,
                'request_data' => $request->all()
            ]);

            return response()->json([
                'status' => 'error',
                'message' => '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–±—ã—Ç–∏—è: ' . $e->getMessage()
            ], 500);
        }
    }
}
